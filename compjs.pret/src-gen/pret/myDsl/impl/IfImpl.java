/**
 * generated by Xtext 2.25.0
 */
package pret.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import pret.myDsl.Commands;
import pret.myDsl.Expression;
import pret.myDsl.If;
import pret.myDsl.MyDslPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>If</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link pret.myDsl.impl.IfImpl#getExp <em>Exp</em>}</li>
 *   <li>{@link pret.myDsl.impl.IfImpl#getIflc <em>Iflc</em>}</li>
 *   <li>{@link pret.myDsl.impl.IfImpl#getEllc <em>Ellc</em>}</li>
 * </ul>
 *
 * @generated
 */
public class IfImpl extends MinimalEObjectImpl.Container implements If
{
  /**
   * The cached value of the '{@link #getExp() <em>Exp</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExp()
   * @generated
   * @ordered
   */
  protected Expression exp;

  /**
   * The cached value of the '{@link #getIflc() <em>Iflc</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIflc()
   * @generated
   * @ordered
   */
  protected Commands iflc;

  /**
   * The cached value of the '{@link #getEllc() <em>Ellc</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEllc()
   * @generated
   * @ordered
   */
  protected Commands ellc;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IfImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.IF;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getExp()
  {
    return exp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExp(Expression newExp, NotificationChain msgs)
  {
    Expression oldExp = exp;
    exp = newExp;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.IF__EXP, oldExp, newExp);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExp(Expression newExp)
  {
    if (newExp != exp)
    {
      NotificationChain msgs = null;
      if (exp != null)
        msgs = ((InternalEObject)exp).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IF__EXP, null, msgs);
      if (newExp != null)
        msgs = ((InternalEObject)newExp).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IF__EXP, null, msgs);
      msgs = basicSetExp(newExp, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.IF__EXP, newExp, newExp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Commands getIflc()
  {
    return iflc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIflc(Commands newIflc, NotificationChain msgs)
  {
    Commands oldIflc = iflc;
    iflc = newIflc;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.IF__IFLC, oldIflc, newIflc);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIflc(Commands newIflc)
  {
    if (newIflc != iflc)
    {
      NotificationChain msgs = null;
      if (iflc != null)
        msgs = ((InternalEObject)iflc).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IF__IFLC, null, msgs);
      if (newIflc != null)
        msgs = ((InternalEObject)newIflc).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IF__IFLC, null, msgs);
      msgs = basicSetIflc(newIflc, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.IF__IFLC, newIflc, newIflc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Commands getEllc()
  {
    return ellc;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEllc(Commands newEllc, NotificationChain msgs)
  {
    Commands oldEllc = ellc;
    ellc = newEllc;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.IF__ELLC, oldEllc, newEllc);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEllc(Commands newEllc)
  {
    if (newEllc != ellc)
    {
      NotificationChain msgs = null;
      if (ellc != null)
        msgs = ((InternalEObject)ellc).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IF__ELLC, null, msgs);
      if (newEllc != null)
        msgs = ((InternalEObject)newEllc).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.IF__ELLC, null, msgs);
      msgs = basicSetEllc(newEllc, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.IF__ELLC, newEllc, newEllc));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.IF__EXP:
        return basicSetExp(null, msgs);
      case MyDslPackage.IF__IFLC:
        return basicSetIflc(null, msgs);
      case MyDslPackage.IF__ELLC:
        return basicSetEllc(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.IF__EXP:
        return getExp();
      case MyDslPackage.IF__IFLC:
        return getIflc();
      case MyDslPackage.IF__ELLC:
        return getEllc();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.IF__EXP:
        setExp((Expression)newValue);
        return;
      case MyDslPackage.IF__IFLC:
        setIflc((Commands)newValue);
        return;
      case MyDslPackage.IF__ELLC:
        setEllc((Commands)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.IF__EXP:
        setExp((Expression)null);
        return;
      case MyDslPackage.IF__IFLC:
        setIflc((Commands)null);
        return;
      case MyDslPackage.IF__ELLC:
        setEllc((Commands)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.IF__EXP:
        return exp != null;
      case MyDslPackage.IF__IFLC:
        return iflc != null;
      case MyDslPackage.IF__ELLC:
        return ellc != null;
    }
    return super.eIsSet(featureID);
  }

} //IfImpl
